---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: discoveries.advertisement.fluidos.eu
spec:
  group: advertisement.fluidos.eu
  names:
    kind: Discovery
    listKind: DiscoveryList
    plural: discoveries
    shortNames:
    - dis
    singular: discovery
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.solverID
      name: Solver ID
      type: string
    - jsonPath: .spec.subscribe
      name: Subscribe
      type: boolean
    - jsonPath: .status.peeringCandidate.namespace
      name: PC Namespace
      type: string
    - jsonPath: .status.peeringCandidate.name
      name: PC Name
      type: string
    - jsonPath: .status.phase.phase
      name: Status
      type: string
    - jsonPath: .status.phase.message
      name: Message
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Discovery is the Schema for the discoveries API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: DiscoverySpec defines the desired state of Discovery.
            properties:
              selector:
                description: |-
                  This is the FlavourSelector that describes the characteristics of the intent that the solver is looking to satisfy
                  This pattern corresponds to what has been defined in the REAR Protocol to do a discovery with a selector
                properties:
                  filters:
                    description: Filters contains the filters that the solver is using
                      to refining the research.
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  flavorType:
                    description: FlavorType is the type of the Flavor that the solver
                      is looking for.
                    type: string
                required:
                - flavorType
                type: object
              solverID:
                description: |-
                  This is the Solver ID of the solver that creates and so asks for the discovery.
                  This is a reference to the Solver CRD
                type: string
              subscribe:
                description: |-
                  This flag indicates that needs to be established a subscription to the provider in case a match is found.
                  In order to have periodic updates of the status of the matching Flavor
                type: boolean
            required:
            - solverID
            - subscribe
            type: object
          status:
            description: DiscoveryStatus defines the observed state of Discovery.
            properties:
              peeringCandidateList:
                description: This is a list of the PeeringCandidates that have been
                  found as a result of the discovery matching the solver
                properties:
                  apiVersion:
                    description: |-
                      APIVersion defines the versioned schema of this representation of an object.
                      Servers should convert recognized schemas to the latest internal value, and
                      may reject unrecognized values.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                    type: string
                  items:
                    items:
                      description: PeeringCandidate is the Schema for the peeringcandidates
                        API.
                      properties:
                        apiVersion:
                          description: |-
                            APIVersion defines the versioned schema of this representation of an object.
                            Servers should convert recognized schemas to the latest internal value, and
                            may reject unrecognized values.
                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                          type: string
                        kind:
                          description: |-
                            Kind is a string value representing the REST resource this object represents.
                            Servers may infer this from the endpoint the client submits requests to.
                            Cannot be updated.
                            In CamelCase.
                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                          type: string
                        metadata:
                          properties:
                            annotations:
                              additionalProperties:
                                type: string
                              type: object
                            finalizers:
                              items:
                                type: string
                              type: array
                            labels:
                              additionalProperties:
                                type: string
                              type: object
                            name:
                              type: string
                            namespace:
                              type: string
                          type: object
                        spec:
                          description: PeeringCandidateSpec defines the desired state
                            of PeeringCandidate.
                          properties:
                            available:
                              type: boolean
                            flavor:
                              description: Flavor is the Schema for the flavors API.
                              properties:
                                apiVersion:
                                  description: |-
                                    APIVersion defines the versioned schema of this representation of an object.
                                    Servers should convert recognized schemas to the latest internal value, and
                                    may reject unrecognized values.
                                    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                                  type: string
                                kind:
                                  description: |-
                                    Kind is a string value representing the REST resource this object represents.
                                    Servers may infer this from the endpoint the client submits requests to.
                                    Cannot be updated.
                                    In CamelCase.
                                    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                                  type: string
                                metadata:
                                  properties:
                                    annotations:
                                      additionalProperties:
                                        type: string
                                      type: object
                                    finalizers:
                                      items:
                                        type: string
                                      type: array
                                    labels:
                                      additionalProperties:
                                        type: string
                                      type: object
                                    name:
                                      type: string
                                    namespace:
                                      type: string
                                  type: object
                                spec:
                                  description: FlavorSpec defines the desired state
                                    of Flavor.
                                  properties:
                                    availability:
                                      description: Availability is the availability
                                        flag of the Flavor.
                                      type: boolean
                                    flavorType:
                                      description: FlavorType is the type of the Flavor.
                                      properties:
                                        typeData:
                                          description: Raw is the raw value of the
                                            Flavor.
                                          type: object
                                          x-kubernetes-preserve-unknown-fields: true
                                        typeIdentifier:
                                          description: Type of the Flavor.
                                          type: string
                                      required:
                                      - typeData
                                      - typeIdentifier
                                      type: object
                                    location:
                                      description: Location is the location of the
                                        Flavor.
                                      properties:
                                        additionalNotes:
                                          description: AdditionalNotes are additional
                                            notes of the location.
                                          type: string
                                        city:
                                          description: City is the city of the location.
                                          type: string
                                        country:
                                          description: Country is the country of the
                                            location.
                                          type: string
                                        latitude:
                                          description: Latitude is the latitude of
                                            the location.
                                          type: string
                                        longitude:
                                          description: Longitude is the longitude
                                            of the location.
                                          type: string
                                      type: object
                                    networkPropertyType:
                                      description: NetworkPropertyType is the network
                                        property type of the Flavor.
                                      type: string
                                    owner:
                                      description: Owner contains the identity info
                                        of the owner of the Flavor. It can be unknown
                                        if the Flavor is provided by a reseller or
                                        a third party.
                                      properties:
                                        additionalInformation:
                                          description: NodeIdentityAdditionalInfo
                                            contains additional information about
                                            the node.
                                          properties:
                                            liqoID:
                                              type: string
                                          type: object
                                        domain:
                                          type: string
                                        ip:
                                          type: string
                                        nodeID:
                                          type: string
                                      required:
                                      - domain
                                      - ip
                                      - nodeID
                                      type: object
                                    price:
                                      description: Price contains the price model
                                        of the Flavor.
                                      properties:
                                        amount:
                                          description: Amount is the amount of the
                                            price.
                                          type: string
                                        currency:
                                          description: Currency is the currency of
                                            the price.
                                          type: string
                                        period:
                                          description: Period is the period of the
                                            price.
                                          type: string
                                      required:
                                      - amount
                                      - currency
                                      - period
                                      type: object
                                    providerID:
                                      description: |-
                                        ProviderID is the ID of the FLUIDOS Node ID that provides this Flavor.
                                        It can correspond to ID of the owner FLUIDOS Node or to the ID of a FLUIDOS SuperNode that represents the entry point to a FLUIDOS Domain
                                      type: string
                                  required:
                                  - availability
                                  - flavorType
                                  - owner
                                  - price
                                  - providerID
                                  type: object
                                status:
                                  description: FlavorStatus defines the observed state
                                    of Flavor.
                                  properties:
                                    creationTime:
                                      description: This field represents the creation
                                        time of the Flavor.
                                      type: string
                                    expirationTime:
                                      description: This field represents the expiration
                                        time of the Flavor. It is used to determine
                                        when the Flavor is no longer valid.
                                      type: string
                                    lastUpdateTime:
                                      description: This field represents the last
                                        update time of the Flavor.
                                      type: string
                                  required:
                                  - creationTime
                                  - expirationTime
                                  - lastUpdateTime
                                  type: object
                              type: object
                            interestedSolverIDs:
                              items:
                                type: string
                              type: array
                          required:
                          - available
                          - flavor
                          - interestedSolverIDs
                          type: object
                        status:
                          description: PeeringCandidateStatus defines the observed
                            state of PeeringCandidate.
                          properties:
                            creationTime:
                              description: This field represents the creation time
                                of the PeeringCandidate.
                              type: string
                            lastUpdateTime:
                              description: This field represents the last update time
                                of the PeeringCandidate.
                              type: string
                          required:
                          - creationTime
                          - lastUpdateTime
                          type: object
                      type: object
                    type: array
                  kind:
                    description: |-
                      Kind is a string value representing the REST resource this object represents.
                      Servers may infer this from the endpoint the client submits requests to.
                      Cannot be updated.
                      In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                    type: string
                  metadata:
                    description: |-
                      ListMeta describes metadata that synthetic resources must have, including lists and
                      various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
                    properties:
                      continue:
                        description: |-
                          continue may be set if the user set a limit on the number of items returned, and indicates that
                          the server has more data available. The value is opaque and may be used to issue another request
                          to the endpoint that served this list to retrieve the next set of available objects. Continuing a
                          consistent list may not be possible if the server configuration has changed or more than a few
                          minutes have passed. The resourceVersion field returned when using this continue value will be
                          identical to the value in the first response, unless you have received this token from an error
                          message.
                        type: string
                      remainingItemCount:
                        description: |-
                          remainingItemCount is the number of subsequent items in the list which are not included in this
                          list response. If the list request contained label or field selectors, then the number of
                          remaining items is unknown and the field will be left unset and omitted during serialization.
                          If the list is complete (either because it is not chunking or because this is the last chunk),
                          then there are no more remaining items and this field will be left unset and omitted during
                          serialization.
                          Servers older than v1.15 do not set this field.
                          The intended use of the remainingItemCount is *estimating* the size of a collection. Clients
                          should not rely on the remainingItemCount to be set or to be exact.
                        format: int64
                        type: integer
                      resourceVersion:
                        description: |-
                          String that identifies the server's internal version of this object that
                          can be used by clients to determine when objects have changed.
                          Value must be treated as opaque by clients and passed unmodified back to the server.
                          Populated by the system.
                          Read-only.
                          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                        type: string
                      selfLink:
                        description: 'Deprecated: selfLink is a legacy read-only field
                          that is no longer populated by the system.'
                        type: string
                    type: object
                required:
                - items
                type: object
              phase:
                description: This is the current phase of the discovery
                properties:
                  endTime:
                    type: string
                  lastChangeTime:
                    type: string
                  message:
                    type: string
                  phase:
                    description: Phase represents the phase of the solver.
                    type: string
                  startTime:
                    type: string
                required:
                - phase
                type: object
            required:
            - phase
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
